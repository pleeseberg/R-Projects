source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
# Load necessary packages
required_packages <- c('tidyverse', 'syuzhet', 'wordcloud', 'tm', 'ggplot2', 'textdata', 'tidytext', 'lubridate')
for(pkg in required_packages) {
if(!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
}
# Set options for reproducibility
set.seed(123)  # Ensures reproducibility for random processes
options(stringsAsFactors = FALSE)  # Ensures strings are not converted to factors automatically
# Load the dataset
textDataAll <- read.csv("path/to/your/twitter_data.csv")
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/Downloads/R-Projects/R-Projects.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/R-Projects/Time_Series_Plot.R", echo=TRUE)
source("~/Downloads/R-Projects/Time_Series_Plot.R", echo=TRUE)
source("~/Downloads/R-Projects/Time_Series_Plot.R", echo=TRUE)
source("~/Downloads/R-Projects/Time_Series_Plot.R", echo=TRUE)
source("~/Downloads/R-Projects/Time_Series_Plot.R", echo=TRUE)
source("~/Downloads/R-Projects/Twitter_Sentiment_Analysis.R", echo=TRUE)
source("~/Downloads/R-Projects/Time_Seires_Analysis/src/data_processing.R", echo=TRUE)
residuals_data <- data.frame(
Date = data$Date[1:train_size],
MasterCard_Residuals = residuals(fit_MasterCard),
Visa_Residuals = residuals(fit_Visa)
)
# Set the working directory to the project directory
setwd("/Users/paigeleeseberg/Downloads/R-Projects/Time_Seires_Analysis")
# Define file paths
data_path <- "data/MVR.csv"  # Path to the dataset
results_path <- "results/forecast_results.csv"  # Path to save forecast results
residuals_path <- "results/residuals_data.csv"  # Path to save residuals data
# Load necessary libraries
print("Loading necessary libraries...")
suppressMessages({
library(forecast)
library(readr)
library(tseries)
})
# Load the dataset with error handling
print("Loading the dataset...")
tryCatch({
data <- read_csv(data_path)
print("Dataset loaded successfully from data directory!")
}, error = function(e) {
print("Error in loading dataset: ")
print(e)
stop("Script terminated.")
})
# Print summary statistics of the dataset
print("Dataset Summary Statistics:")
print(summary(data))
# Convert the Date column to Date type with error handling
print("Converting the Date column to Date type...")
tryCatch({
data$Date <- as.Date(data$Date, format="%Y-%m-%d")
print("Date conversion completed!")
}, error = function(e) {
print("Error in date conversion: ")
print(e)
stop("Script terminated.")
})
# Check for missing values
print("Checking for missing values...")
missing_values <- sum(is.na(data))
if (missing_values > 0) {
print(paste("Warning: There are", missing_values, "missing values in the dataset."))
} else {
print("No missing values found in the dataset.")
}
# Create time series objects for closing prices
print("Creating time series objects for closing prices...")
ts_MasterCard <- ts(data$`Close_M`, start = c(2008, 6), frequency = 252)
ts_Visa <- ts(data$`Close_y`, start = c(2008, 6), frequency = 252)
residuals_data <- data.frame(
Date = data$Date[1:train_size],
MasterCard_Residuals = residuals(fit_MasterCard),
Visa_Residuals = residuals(fit_Visa)
)
# Set the working directory to the project directory
setwd("/Users/paigeleeseberg/Downloads/R-Projects/Time_Seires_Analysis")
suppressMessages({
library(forecast)
library(readr)
library(tseries)
})
results_path <- "results/forecast_results.csv"  # Path to save forecast results
residuals_data <- data.frame(
Date = data$Date[1:train_size],
MasterCard_Residuals = residuals(fit_MasterCard),
Visa_Residuals = residuals(fit_Visa)
)
# Save the forecast results to a CSV file
print("Saving the forecast results to a CSV file...")
forecast_data <- data.frame(
Date = seq(as.Date("2024-06-01"), by="day", length.out=12),
MasterCard_Forecast = forecast_MasterCard$mean,
# Save the forecast results to a CSV file
print("Saving the forecast results to a CSV file...")
forecast_data <- data.frame(
# Save the forecast results to a CSV file
print("Saving the forecast results to a CSV file...")
forecast_data <- data.frame(
Date = seq(as.Date("2024-06-01"), by="day", length.out=12),
MasterCard_Forecast = forecast_MasterCard$mean,
# Set the working directory to the project directory
setwd("/Users/paigeleeseberg/Downloads/R-Projects/Time_Seires_Analysis")
# Define file paths
data_path <- "data/MVR.csv"  # Path to the dataset
residuals_data <- data.frame(
Date = data$Date[1:train_size],
MasterCard_Residuals = residuals(fit_MasterCard_train),
Visa_Residuals = residuals(fit_Visa_train)
)
